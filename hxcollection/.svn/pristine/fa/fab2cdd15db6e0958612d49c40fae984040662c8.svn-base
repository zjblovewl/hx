package cn.com.hxfz.service.impl;

import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.com.hxfz.dao.GeneralUserDao;
import cn.com.hxfz.service.GeneralUserService;
import cn.com.hxfz.util.CommonUtils;
import cn.com.hxfz.util.StringUtils;

/**
 * @类功能说明：
 * @公司名称：南京华讯方舟通讯设备有限公司
 * @作者：qiangxuan
 * @创建时间：2018年4月2日 上午11:29:15
 * @版本：V1.0
 */

@Service("generalUserService")
public class GeneralUserServiceImpl implements GeneralUserService {

	static Logger logger = Logger.getLogger(GeneralUserServiceImpl.class
			.getName());

	@Autowired
	private GeneralUserDao generalUserDao;

	@Override
	public List<Map<String, Object>> getGeneralUser(Map<String, Object> param) {
		return generalUserDao.getGeneralUser(param);
	}

	@Override
	public int getGeneralUserCount(Map<String, Object> param) {
		int total = generalUserDao.getGeneralUserCount(param);
		return total;
	}

	@Override
	public void updateGeneralUser(Map<String, Object> paramsMap) {
		generalUserDao.updateGeneralUserById(paramsMap);
	}

	@Override
	public void deleteGeneralUser(Map<String, Object> paramsMap) {
		generalUserDao.deleteGeneralUserById(paramsMap);
	}

	@Override
	public void delMoreGeneralUser(Map<String, Object> paramsMap) {
		generalUserDao.delMoreGeneralUser(paramsMap);
	}

	@Override
	public void saveGeneralUser(Map<String, Object> paramsMap) {

		if ((paramsMap.get("id") != null && StringUtils.isNotEmpty(paramsMap.get("id").toString()))) {
			
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			//isLock 是否锁定  0：锁定  1：激活
			if(Integer.parseInt(paramsMap.get("isLock").toString()) == 1){
				paramsMap.put("lockDays",  null);
				paramsMap.put("lockTime", null);
				paramsMap.put("lockReason", null);
			}else{
				paramsMap.put("lockTime", Timestamp.valueOf(sdf.format(new Date())));
				if ((paramsMap.get("lockDays") != null && StringUtils.isNotEmpty(paramsMap.get("lockDays").toString()))) {
					paramsMap.put("lockDays",  Integer.valueOf(paramsMap.get("lockDays").toString()));
				}
				logger.info("锁定天数："+Integer.valueOf(paramsMap.get("lockDays").toString()));
			
				logger.info("锁定时间："+Timestamp.valueOf(sdf.format(new Date())));
			}
			generalUserDao.updateGeneralUserById(paramsMap);
		} else {
			String id = CommonUtils.getUUID();
    		String delflag = "0";
    		String isflagnickname = "0";
    		String isAuthentication = "0";
			paramsMap.put("id", id);
			paramsMap.put("delflag", delflag);
			paramsMap.put("isflagnickname", isflagnickname);
			paramsMap.put("isAuthentication", isAuthentication);
			generalUserDao.saveGeneralUser(paramsMap);
		}

	}

	@Override
	public Boolean checkSameUserName(Map<String, Object> paramsMap) {
		int count = 0;
		//result true:校验通过,false:校验不通过
		Boolean result = false;
		//userId不为空,则为编辑
		if((paramsMap.get("id") != null && StringUtils.isNotEmpty(paramsMap.get("id").toString()))){
			count = generalUserDao.checkEditUser(paramsMap);
			if(count > 0){
				result = false;
			}else{
				result = true;
			}			
		}else{
			count = generalUserDao.checkAddUser(paramsMap);
			if(count > 0){
				result = false;
			}else{
				result = true;
			}	
		}
		return result;
	}

	@Override
	public Boolean checkSamePhone(Map<Object, String> paramsMap) {
		int count = 0;
		//result true:校验通过,false:校验不通过
		Boolean result = false;
		//id不为空,则为编辑
		if(paramsMap.get("id") != null && StringUtils.isNotEmpty(paramsMap.get("id").toString())){
			count = generalUserDao.checkEditPhone(paramsMap);
			logger.info("编辑时手机号count:"+count);
			if(count > 0){
				result = false;
			}else{
				result = true;
			}			
		}else{
			count = generalUserDao.checkAddPhone(paramsMap);
			logger.info("新增时手机号count:"+count);
			if(count > 0){
				result = false;
			}else{
				result = true;
			}	
		}
		return result;
	}

	@Override
	public List<Map<String, Object>> getExportUserList(Map<String, Object> map) {
		return generalUserDao.getExportUserList(map);
	}

	@Override
	public List<Map<String, Object>> getCommonUserInfo(Map<String, Object> param) {
		// TODO Auto-generated method stub
		return generalUserDao.getCommonUserInfo(param);
	}

	@Override
	public int getCommonUserCount(Map<String, Object> param) {
		int total = generalUserDao.getCommonUserCount(param);
		return total;
	}

}
