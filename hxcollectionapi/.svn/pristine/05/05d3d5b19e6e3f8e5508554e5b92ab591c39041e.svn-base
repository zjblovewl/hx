<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.pc.transaction.dao.TransactionPcMapper">
	<!-- 首页藏品广告 -->
	<select id="getHomePageAdvertisementRecords" resultType="java.util.HashMap">
		select adv.homepage_name,COALESCE(adv.html_url,'')as html_url,
		COALESCE(t.original_image_urls,'') as original_image_urls
		from hxdb.hx_homepage_advertisement adv
		left join
		(        
		    select re.service_id,string_agg(img.image_url,',')as original_image_urls
		    from (select * from hxdb.hx_images_advertisement_rel order by sort asc) re
		    left join hxdb.sys_images img on img.id = re.image_id
		    group by re.service_id 	
		)t on t.service_id = adv.id
		where del_flag = '0' order by sort asc
	</select>
	
	<!-- 首页推荐藏品 -->
	<select id="getRecommendGoodsRecords" resultType="java.util.HashMap">
		select g.id as goods_id,g.goods_name,g.goods_description, 
		COALESCE(t.small_image_urls,'') as small_image_urls
		from hxdb.hx_goods g
		left join
		(        
		    select re.service_id,string_agg(img.image1_url,',')as small_image_urls,string_agg(img.image3_url,',')as big_image_urls
		    from (select * from hxdb.hx_images_goods_rel order by sort asc) re
		    left join hxdb.sys_images img on img.id = re.image_id
		    group by re.service_id 	
		)t on t.service_id = g.id
		<!-- goods_type 1：藏品 2：拍卖  is_recommend 0：否 1：是 -->
		where goods_type = '1' and is_recommend = '1' order by sort asc
	</select>
	
	<!-- 首页卖家推荐 -->
	<select id="getRecommendSellerRecords" resultType="java.util.HashMap">
		select id as user_id,nick_name,COALESCE(t.head_image_urls,'') as head_image_urls from hxdb.hx_user u 
		left join
		(
		    select re.service_id,string_agg(img.image1_url,',')as head_image_urls 
		    from (select * from hxdb.hx_images_user_rel order by sort asc) re
		    left join hxdb.sys_images img on img.id = re.image_id
		    group by re.service_id 	
		)t on t.service_id = u.id
		where u.del_flag = '0' and u.is_recommend = '1' order by u.sort asc
	</select>
	
	<!-- 我的藏品（在售） -->
	<select id="getMyInSaleGoodsRecords" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<!-- goods_type 1：普通商品 2：拍卖商品' -->
		<!-- status 1：上架 2：下架 -->
		<!-- inventory 库存 -->
		select g.id as goods_id,g.goods_name,g.price,
		extract(epoch from to_timestamp(to_char(g.create_time,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss'))as create_time,
		extract(epoch from to_timestamp(to_char(now(),'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss'))as current_time,		
		COALESCE(t.small_image_urls,'') as small_image_urls,
		COALESCE(t.big_image_urls,'') as big_image_urls,
		COALESCE(t.original_image_urls,'') as original_image_urls
		from hxdb.hx_goods g
		left join
		(        
			select re.service_id,string_agg(img.image1_url,',')as small_image_urls,string_agg(img.image3_url,',')as big_image_urls,string_agg(img.image_url,',')as original_image_urls
			from (select * from hxdb.hx_images_goods_rel order by sort asc) re
			left join hxdb.sys_images img on img.id = re.image_id
			group by re.service_id 	
		)t on t.service_id = g.id
		where del_flag = '0' and goods_type = '1' and status = '1' and inventory > 0 and user_id = #{user_id}
	</select>
</mapper>