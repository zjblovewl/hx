package cn.com.util;

/**     
 * @文件名称: DateUtil.java  
 * @类路径: 	cn.com.common  
 * @描述: 	TODO  
 * @作者：	chenxianxiao 
 * @时间：	2017年1月11日 下午3:44:22  
 * @版本：V1.0     
 */

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import org.apache.log4j.Logger;

/**
 * @类功能说明：时间处理工具类
 * @公司名称：南京华讯方舟通讯设备有限公司
 * @作者：chenxianxiao
 * @创建时间：2017年1月11日 下午3:44:22
 * @版本：V1.0
 */
public class DateUtil
{

	private static final Logger log = Logger.getLogger(DateUtil.class);
	
	
	public static String DEFAULT_FORMAT = "yyyy-MM-dd";
	
	public static String DEFAULT_FORMAT_TIME = "yyyy-MM-dd HH:mm";

	/**
	 * 返回特定格式的日期 格式如下: yyyy-mm-dd
	 *
	 * @param formatString
	 * @return
	 */
	public static String getFormatDateByDate(String formatString,Date date)
	{
		String currentDate = "";
		SimpleDateFormat format1 = new SimpleDateFormat(formatString);
		currentDate = format1.format(date);
		return currentDate;
	}

	/***
	 * 
	 * 方法功能说明： 获取当天的开始时间即 00:00:00 创建：2017年1月11日 by chenxianxiao
	 * 
	 * @参数： @return
	 * @return Date
	 * @throws
	 */
	public static Date getTodayStartTime()
	{
		Calendar todayStart = Calendar.getInstance();
		todayStart.set(Calendar.HOUR, 0);
		todayStart.set(Calendar.MINUTE, 0);
		todayStart.set(Calendar.SECOND, 0);
		todayStart.set(Calendar.MILLISECOND, 0);
		return todayStart.getTime();
	}

	/**
	 * @description 根据时间戳转换日期
	 * @method  generatorDateByTimestamp
	 * @param  * @param timestamp
	 * @return java.util.Date
	 * @date: 2018/4/17 09:07:37
	 * @author:zhoujinbing
	 */
	public static Date generatorDateByTimestamp(long timestamp)
	{
		return new Date(timestamp*1000);
	}

	/***
	 * 
	 * 方法功能说明： 获取当天的结束时间即 23:59:59 创建：2017年1月11日 by chenxianxiao
	 * 
	 * @参数： @return
	 * @return Date
	 * @throws
	 */
	public static Date getTodayEndTime()
	{
		Calendar todayEnd = Calendar.getInstance();
		todayEnd.set(Calendar.HOUR, 23);
		todayEnd.set(Calendar.MINUTE, 59);
		todayEnd.set(Calendar.SECOND, 59);
		todayEnd.set(Calendar.MILLISECOND, 999);
		return todayEnd.getTime();
	}

	/***
	 * 
	 * 方法功能说明： 根据格式获取时间 创建：2017年1月11日 by chenxianxiao
	 * 
	 * @参数： @param time
	 * @参数： @param Format
	 * @参数： @return
	 * @return Data
	 * @throws
	 */
	public static Date getDateByFormat(String time, String Format)
	{
		SimpleDateFormat sdf = new SimpleDateFormat(Format);
		Date date = null;
		try
		{
			date = sdf.parse(time);
		}
		catch (ParseException e)
		{
			e.printStackTrace();
			log.error("时间格式转换失败:" + e.getMessage(), e);
			return null;
		}
		return date;
	}
	
	/**
	 * 得到当前系统日期,格式:yyyy-mm-dd
	 * 
	 * @return
	 */
	public static String getCurrentDate()
	{

		return getFormatDate("yyyy-MM-dd");
	}

	/**
	 * 返回年份
	 * 
	 * @return
	 */
	public static String getCurrentYear()
	{

		return getFormatDate("yyyy");
	}

	/**
	 * 返回月份
	 */
	public static String getCurrentMonth()
	{
		return getFormatDate("MM");
	}

	/**
	 * 返回特定格式的日期 格式如下: yyyy-mm-dd
	 * 
	 * @param formatString
	 * @return
	 */
	public static String getFormatDate(String formatString)
	{
		String currentDate = "";
		SimpleDateFormat format1 = new SimpleDateFormat(formatString);
		currentDate = format1.format(new Date());
		return currentDate;
	}

	/**
	 * 返回时间格式样式
	 * 
	 * @return
	 */
	public static String getFormateDateAll()
	{
		return getFormatDate("yyyy-MM-dd HH:mm:ss");
	}

	/**
	 * 获取简化时间格式
	 * 
	 * @return
	 */
	public static String getFormateDateSimple()
	{
		return getFormatDate("yyyyMMddHHmmss");
	}

	/**
	 * 获取几天后的时间
	 * 
	 * @param d
	 * @param day
	 * @return
	 */
	public static Date getDateAfterDay(Date d, int day)
	{
		Calendar now = Calendar.getInstance();
		now.setTime(d);
		now.set(Calendar.DATE, now.get(Calendar.DATE) + day);
		return now.getTime();
	}

	/**
	 * 返回几个小时后的时间
	 * 
	 * @param d
	 * @param hour
	 * @return
	 */
	public static Date getDateAfterHour(Date d, int hour)
	{
		Calendar now = Calendar.getInstance();
		now.setTime(d);
		now.set(Calendar.HOUR, now.get(Calendar.HOUR) + hour);
		return now.getTime();
	}

	/**
	 * 返回几分钟后的某个时间
	 * 
	 * @param d
	 * @param minutes
	 * @return
	 */
	public static Date getDateAfterMinute(Date d, int minutes)
	{
		Calendar now = Calendar.getInstance();
		now.setTime(d);
		now.set(Calendar.MINUTE, now.get(Calendar.MINUTE) + minutes);
		return now.getTime();
	}

	/**
	 * 比较两个日期的大小 true date1比date2前 false date1比date2后
	 * 
	 * @param date1
	 * @param date2
	 * @return
	 */
	public static boolean dateCompare(Date date1, Date date2)
	{
		boolean dateComPareFlag = true;
		if (date2.compareTo(date1) != 1)
		{
			dateComPareFlag = false;
		}
		return dateComPareFlag;
	}

	/**
	 * 返回两时间之差
	 * 
	 * @param startTime
	 * @param endTime
	 * @return
	 */
	public static long dateMinus(Date startTime, Date endTime)
	{
		return endTime.getTime() - startTime.getTime();
	}

	// 计算两个string类的时间差
	public static String time(String startTime, String endTime)
			throws ParseException
	{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");// 格式化时间
		Date outdate = sdf.parse(endTime);
		Date indate = sdf.parse(startTime);
		long totalhours = (outdate.getTime() - indate.getTime())
				/ (1000 * 60 * 60);// 时
		long totalminutes = (outdate.getTime() - indate.getTime())
				/ (1000 * 60) - totalhours * 60;// 分
		long totalseconds = (outdate.getTime() - indate.getTime()) / (1000)
				- totalminutes * 60;// 秒
		String total_time = totalhours + "时" + totalminutes + "分"
				+ totalseconds + "秒";
		return total_time;
	}
	
	/**
     * 格式化日期
     * @param date 日期对象
     * @return String 日期字符串
     */
    public static String formatDate(Date date){
        SimpleDateFormat f = new SimpleDateFormat(DEFAULT_FORMAT_TIME);
        String sDate = f.format(date);
        return sDate;
    }
     
    /**
     * 获取当年的第一天
     * @param year
     * @return
     */
    public static Date getNextYearFirst(){
        Calendar currCal=Calendar.getInstance();  
        int currentYear = currCal.get(Calendar.YEAR);
        return getYearFirst(currentYear+1);
    }
     
    /**
     * 获取当年的最后一天
     * @param year
     * @return
     */
    public static Date getCurrYearLast(){
        Calendar currCal=Calendar.getInstance();  
        int currentYear = currCal.get(Calendar.YEAR);
        return getYearLast(currentYear);
    }
     
    /**
     * 获取某年第一天日期
     * @param year 年份
     * @return Date
     */
    public static Date getYearFirst(int year){
        Calendar calendar = Calendar.getInstance();
        calendar.clear();
        calendar.set(Calendar.YEAR, year);
        Date currYearFirst = calendar.getTime();
        return currYearFirst;
    }
     
    /**
     * 获取某年最后一天日期
     * @param year 年份
     * @return Date
     */
    public static Date getYearLast(int year){
        Calendar calendar = Calendar.getInstance();
        calendar.clear();
        calendar.set(Calendar.YEAR, year);
        calendar.roll(Calendar.DAY_OF_YEAR, -1);
        Date currYearLast = calendar.getTime();
         
        return currYearLast;
    }

//    public static void main(String[] args)
//    {
//        System.out.print(System.currentTimeMillis());
//    }
    
}
