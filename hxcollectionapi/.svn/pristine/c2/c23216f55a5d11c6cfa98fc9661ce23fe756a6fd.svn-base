package mobile.auction.controller;

import cn.com.App;
import cn.com.base.constant.BaseConstant;
import cn.com.base.util.Des3;
import cn.com.base.vo.RequestParamVo;
import cn.com.base.vo.auction.GoodsQueryParams;
import com.fasterxml.jackson.databind.ObjectMapper;
import mobile.BaseControllerTest;
import mobile.user.controller.UserMobileControllerTest;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;

import java.util.HashMap;
import java.util.Map;

/**
 * @类功能说明：拍卖Controller测试
 * @公司名称：南京华讯方舟通讯设备有限公司
 * @作者：zhoujinbing
 * @创建时间：2018/3/30 上午16:01
 * @版本：V1.0
 */
@RunWith(SpringRunner.class)
@SpringBootTest(classes = App.class)
@WebAppConfiguration
public class AuctionMobileControllerTest extends BaseControllerTest{

    @Autowired
    private BaseConstant baseConstant;

    String rootUrl =  super.baseUrl +  "api/auctionmobile/";

    private static ObjectMapper objectMapper = new ObjectMapper();

    private Logger log = LoggerFactory.getLogger(UserMobileControllerTest.class);

    /**
     * @description 获取大小类测试
     * @method  
     * @param  * @param null
     * @return 
     * @date: 2018/3/30 16:03:18
     * @author:zhoujinbing
     */
    @Test
    public void getSizeOfClassTest()
    {
        try {
            String url = rootUrl + "getSizeOfClass";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            // 业务参数
            Map<String, Object> body = new HashMap<String, Object>();
            body.put("class_type","2");

            RequestParamVo requestParam = new RequestParamVo(header,body);
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @description 获取拍卖场次测试
     * @method
     * @param  * @param null
     * @return
     * @date: 2018/3/30 16:03:18
     * @author:zhoujinbing
     */
    @Test
    public void getSessionTest()
    {
        try {
            String url = rootUrl + "getSession";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            RequestParamVo requestParam = new RequestParamVo(header,"");
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @description 发布拍卖测试
     * @method
     * @param  * @param null
     * @return
     * @date: 2018/3/30 16:03:18
     * @author:zhoujinbing
     */
    @Test
    public void publishAcutionTest()
    {
        try {
            String url = rootUrl + "publishAcution";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            // 业务参数
            Map<String, Object> body = new HashMap<String, Object>();
            body.put("goods_description","空调");
            body.put("cityCode","321100");//320600  321100   321300   330100
            body.put("imageIds","2ee4b7c6e1d4491792f6ff8516555c5e");
            body.put("startPrice","80");
            body.put("markupPrice","50");
            body.put("bigClassCode","0");
            body.put("smallClassCode","2");
            body.put("inventory","20");
            body.put("postage","20");
            body.put("endTimeStr","2018-04-03 19:00:00");

            RequestParamVo requestParam = new RequestParamVo(header,body);
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @description 加载拍卖列表测试
     * @method
     * @param  * @param null
     * @return
     * @date: 2018/3/30 16:03:18
     * @author:zhoujinbing
     */
    @Test
    public void getGoodsByTypeTest()
    {
        try {
            String url = rootUrl + "getGoodsByType";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            // 业务参数
            GoodsQueryParams goodsBody = new GoodsQueryParams();
            goodsBody.setPage_num(1);
            goodsBody.setPage_size(10);
            //goodsBody.setSort_type(4);//排序方式  1、默认排序   2、出价最多   3、出价最少     4、当前价最低
            //goodsBody.setBig_class_code("0");
            //goodsBody.setSmall_class_code("2");
            //goodsBody.setSearch_content("玉");
            goodsBody.setSearch_type(2);//(1、捡漏 2、上新 3、热门 )


            RequestParamVo requestParam = new RequestParamVo(header,goodsBody);
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @description 新增出价测试
     * @method
     * @param  * @param null
     * @return
     * @date: 2018/4/3 13:47:17
     * @author:zhoujinbing
     */
    @Test
    public void addGoodsOfferRecordTest()
    {
        try {
            String url = rootUrl + "addGoodsOfferRecord";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            // 业务参数
            Map<String, Object> body = new HashMap<String, Object>();
            body.put("goodsId","1e4bd296c51f4f1188a7c0ac64997a45");//0235716ede3948ac946cbd78738532d4 1945b34cc54f4c1bb089f201cace60a7 6b0c54753b824dca9fa4e6daf8bf0079
            body.put("customerId","1");
            body.put("nickName","admin");
            body.put("offerPrice","280");

            RequestParamVo requestParam = new RequestParamVo(header,body);
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @description 出价记录分页查询测试
     * @method
     * @param  * @param null
     * @return
     * @date: 2018/4/3 13:47:17
     * @author:zhoujinbing
     */
    @Test
    public void getGoodsOfferRecordTest()
    {
        try {
            String url = rootUrl + "getGoodsOfferRecord";

            InitParamHeader("q+gKOnfXlZWcrdiCkb3839tiAVdum8EY","1","1","Iphone","ios10.1");//初始化头请 默认不校验Token

            // 业务参数
            Map<String, Object> body = new HashMap<String, Object>();
            body.put("goodsId","6b0c54753b824dca9fa4e6daf8bf0079");//0235716ede3948ac946cbd78738532d4 1945b34cc54f4c1bb089f201cace60a7 6b0c54753b824dca9fa4e6daf8bf0079
            body.put("pageNum","1");
            body.put("pageSize","10");

            RequestParamVo requestParam = new RequestParamVo(header,body);
            String paras = objectMapper.writeValueAsString(requestParam);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = cn.com.util.HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


}
