<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.mobile.wallet.dao.MyBankMapper" >
  <resultMap id="BaseResultMap" type="cn.com.model.wallet.MyBank" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_city" property="bankCity" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, bank_code, bank_city, real_name, bank_no, is_default, create_time, update_time
  </sql>

  <!-- 加载我的银行卡信息 -->
  <select id="getMyBankInfo" parameterType="java.lang.String" resultType="map">
      SELECT
          COALESCE(temp.dic_name,'') as bank_name,
          COALESCE(bank.bank_no,'') as card_no,
          COALESCE(bank.real_name,'') as real_name,
          COALESCE(bank.bank_code,'') as bank_code
      FROM hxdb.hx_my_bank bank
      left join
      (
          select * from hxdb.sys_dictionary t where t.pid = (select id from hxdb.sys_dictionary dit where dit.dic_value = 'bank_type')
      ) temp on bank.bank_code = temp.dic_value
      where bank.user_id = #{user_id}
      order by bank.create_time desc
  </select>

  <!-- 根据key加载数据字典集合 -->
  <select id="getValueByKey" parameterType="java.lang.String" resultType="map">
    select dic_name,dic_value from hxdb.sys_dictionary dic,
    (SELECT id FROM hxdb.sys_dictionary where dic_value = #{key})
    temp
    where dic.pid = temp.id
    order by dic.sort
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hxdb.hx_my_bank
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hxdb.hx_my_bank
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.model.wallet.MyBank" >
    insert into hxdb.hx_my_bank (id, user_id, bank_code, 
      bank_city, real_name, bank_no, 
      is_default, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, 
      #{bankCity,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.model.wallet.MyBank" >
    insert into hxdb.hx_my_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankCity != null" >
        bank_city,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="bankNo != null" >
        bank_no,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankCity != null" >
        #{bankCity,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.model.wallet.MyBank" >
    update hxdb.hx_my_bank
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankCity != null" >
        bank_city = #{bankCity,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.model.wallet.MyBank" >
    update hxdb.hx_my_bank
    set user_id = #{userId,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_city = #{bankCity,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>