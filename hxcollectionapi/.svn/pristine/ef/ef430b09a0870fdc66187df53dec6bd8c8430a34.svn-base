package cn.com.mobile.message.controller;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import cn.com.base.constant.BaseConstant;
import cn.com.base.vo.RequestParamVo;
import cn.com.base.vo.ResponseParamHeader;
import cn.com.base.vo.ResponseParamVo;
import cn.com.mobile.message.service.MessageMobileService;

import com.fasterxml.jackson.databind.ObjectMapper;

/**  
 * @类功能说明：我的消息controller
 * @公司名称：南京华讯方舟通讯设备有限公司  
 * @作者：chenchen  
 * @创建时间：2018年4月13日 上午9:36:28 
 * @版本：V1.0  
 */
@RestController
@RequestMapping("/api/mymessagemobile")
public class MessageMobileController {
	private static final Logger log = LoggerFactory.getLogger(MessageMobileController.class);
	
	 private ObjectMapper objectMapper = new ObjectMapper();

     @Autowired
     private BaseConstant baseConstant;
     
     @Autowired
     private MessageMobileService messageMobileService;
     
     /**
      * 我的消息
      * @description 
      * @method  getMyMessageRecords
      * @param @param request
      * @param @return
      * @return ResponseParamVo
      * @date: 2018年4月13日 上午10:21:59
      * @author:chenchen
      */
     @RequestMapping(value = "/getMyMessageRecords",method = RequestMethod.POST)
     public @ResponseBody ResponseParamVo getMyMessageRecords(HttpServletRequest request){   
         ResponseParamVo result = null;
         String requestJson = (String) request.getAttribute("requestJson");
         RequestParamVo vo = null;
         try {
             vo = objectMapper.readValue(requestJson, RequestParamVo.class);
             result = messageMobileService.getMyMessageRecords(vo);             
         } catch (Exception e) {
             return getResponseParamVo(e);
         }
         log.info("返回数据："+result);
         return result;
     }
     
     /**
      * 我的消息-留言
      * @description 
      * @method  getLeavingMessageRecordsById
      * @param @param request
      * @param @return
      * @return ResponseParamVo
      * @date: 2018年4月16日 上午9:20:13
      * @author:chenchen
      */
     @RequestMapping(value = "/getLeavingMessageRecordsById",method = RequestMethod.POST)
     public @ResponseBody ResponseParamVo getLeavingMessageRecordsById(HttpServletRequest request){   
         ResponseParamVo result = null;
         String requestJson = (String) request.getAttribute("requestJson");
         RequestParamVo vo = null;
         try {
             vo = objectMapper.readValue(requestJson, RequestParamVo.class);
             result = messageMobileService.getLeavingMessageRecordsById(vo);             
         } catch (Exception e) {
             return getResponseParamVo(e);
         }
         log.info("返回数据："+result);
         return result;
     }  
     
     /**
      * 我的消息-系统消息
      * @description 
      * @method  getSysMessageRecords
      * @param @param request
      * @param @return
      * @return ResponseParamVo
      * @date: 2018年4月16日 上午9:25:05
      * @author:chenchen
      */
     @RequestMapping(value = "/getSysMessageRecords",method = RequestMethod.POST)
     public @ResponseBody ResponseParamVo getSystemMessageRecordsById(HttpServletRequest request){   
         ResponseParamVo result = null;
         String requestJson = (String) request.getAttribute("requestJson");
         RequestParamVo vo = null;
         try {
             vo = objectMapper.readValue(requestJson, RequestParamVo.class);
             result = messageMobileService.getSysMessageRecords(vo);             
         } catch (Exception e) {
             return getResponseParamVo(e);
         }
         log.info("返回数据："+result);
         return result;
     }
     
     /**
      * @description 返回错误结果封装方法
      * @method  getResponseParamVo
      * @param  * @param e
      * @return cn.com.base.vo.ResponseParamVo
      * @date: 2018/3/30 09:25:01
      * @author:zhoujinbing
      */
     private ResponseParamVo getResponseParamVo(Exception e) {
         ResponseParamVo result;
         result = new ResponseParamVo();
         ResponseParamHeader header = new ResponseParamHeader();
         header.setResp_code(baseConstant.getErrorCode());
         header.setResp_msg("解密后的请求参数解析成对象出错。");
         result.setHeader(header);
         log.error((String) header.getResp_msg(), e);
         return result;
     }
}
