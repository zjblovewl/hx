package web;

import cn.com.App;
import cn.com.base.constant.BaseConstant;
import cn.com.base.util.Des3;
import cn.com.base.util.MD5;
import cn.com.util.HttpClientUtil;

import com.fasterxml.jackson.databind.ObjectMapper;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.http.*;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import java.util.HashMap;
import java.util.Map;


/**
 * @类功能说明：
 * @公司名称：南京华讯方舟通讯设备有限公司
 * @作者：zhoujinbing
 * @创建时间：2018/3/12 上午12:03
 * @版本：V1.0
 */
@RunWith(SpringRunner.class)
@SpringBootTest(classes = App.class)
@WebAppConfiguration
public class UserControllerTest extends BaseController{

    @Autowired
    private BaseConstant baseConstant;

    String rootUrl =  this.baseUrl +  "userController/";

    private static ObjectMapper objectMapper = new ObjectMapper();

    private Logger log = LoggerFactory.getLogger(UserControllerTest.class);

    @Test
    public void loginTest()
    {
        try {
            String url = rootUrl + "login";

            Map<String, Object> map = new HashMap<String, Object>();
            map.put("appId", baseConstant.getAppId());
            map.put("timestamp", System.currentTimeMillis());
            map.put("Token", MD5.md5(baseConstant.getAppId() +
                    baseConstant.getPwdKey() + map.get("timestamp")));
            map.put("userName", "13222062787");
            map.put("passWord", "www..zhou");
            log.info("Token========" + map.get("Token"));
            String paras = objectMapper.writeValueAsString(map);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );
            String result = HttpClientUtil.executeByPOST(url, paras);
            System.out.println(result);
            
            /*HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
            MultiValueMap<String, String> params = new LinkedMultiValueMap<String, String>();
            params.add( "paras", paras );
            HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<MultiValueMap<String, String>>(params, headers);
            ResponseEntity<String> response = super.getInstance().exchange(url, HttpMethod.POST, requestEntity, String.class);
            System.out.println(response.getBody());*/
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     *
     * 方法功能说明：  测试年级列表
     * 创建：2018/3/12 by zhoujinbing
     * throws
     */
    @Test
    public void getByGradeNmTest(){
        try {
            String url = this.rootUrl + "getByGradeNm";
            String result = super.getInstance().getForObject(url, String.class);
            System.err.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    public void saveOrDelUserPostTest(){
        try {
            String url = rootUrl + "saveOrDelUser";

            Map<String, Object> map = new HashMap<String, Object>();
            map.put("appId", baseConstant.getAppId());
            map.put("timestamp", System.currentTimeMillis());
            map.put("Token", MD5.md5(baseConstant.getAppId() +
                    baseConstant.getPwdKey() + map.get("timestamp")));
            map.put("msisdn", "13913868960");
            map.put("ecid", 672);
            log.info("Token========" + map.get("Token"));
            String paras = objectMapper.writeValueAsString(map);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );


            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
            MultiValueMap<String, String> params = new LinkedMultiValueMap<String, String>();
            params.add( "paras", paras );
            HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<MultiValueMap<String, String>>(params, headers);
            ResponseEntity<String> response = super.getInstance().exchange(url, HttpMethod.POST, requestEntity, String.class);
            System.out.println(response.getBody());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    public void saveOrDelUserGetTest(){
        try {
             String url = rootUrl + "saveOrDelUser?paras={paras}";

            Map<String, Object> map = new HashMap<String, Object>();
            map.put("appId", baseConstant.getAppId());
            map.put("timestamp", System.currentTimeMillis());
            map.put("Token", MD5.md5(baseConstant.getAppId() +
                    baseConstant.getPwdKey() + map.get("timestamp")));
            map.put("msisdn", "13913868960");
            map.put("ecid", 672);
            log.info("Token========" + map.get("Token"));
            String paras = objectMapper.writeValueAsString(map);
            log.info("params==========" + paras);
            paras = Des3.encode( paras, baseConstant.getSecretKey() );

            Map<String, Object> uriVariables = new HashMap<String, Object>();
            uriVariables.put("paras", paras);
            String result = super.getInstance().getForObject(url, String.class, uriVariables);
            //  输出结果
            System.out.println(result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }




}
